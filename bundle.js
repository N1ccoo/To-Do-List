(()=>{"use strict";var n={426:(n,t,e)=>{e.d(t,{Z:()=>a});var o=e(537),r=e.n(o),A=e(645),i=e.n(A)()(r());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;600&display=swap);"]),i.push([n.id,":root {\n    --blue: rgb(66, 174, 247);\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n    font-size: 16px;\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 300;\n}\n\n.nav-symbol {\n    height: 36px;\n    width: 36px;\n    border-radius: 3px;\n    padding: 6px;\n}\n\n.nav-symbol:hover {\n    background-color: rgba(0, 0, 0, 0.11);\n}\n\n.nav-symbol:hover ~ .tooltip {\n    opacity: 1;\n    transition: opacity 0s 0.2s;\n}\n\n.tooltip {\n    position: absolute;\n    top: 2px;\n    left: 35px;\n    opacity: 0;\n    padding: 0.5rem;\n    font-size: 0.9rem;\n    white-space: nowrap;\n    color: rgb(71, 71, 71);\n    text-transform: none;\n    cursor: default;\n}\n\n/* navbar */\n\n.logo {\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 600;\n    letter-spacing: -2px;\n    color: rgb(255, 255, 255);\n    font-size: 2.2rem;\n    cursor: pointer;\n    white-space: nowrap;\n}\n\nheader {\n    background: #797bf3;  /* fallback for old browsers */\n    background: -webkit-linear-gradient(to right, #d6e8fac2, #4294ff81);  /* Chrome 10-25, Safari 5.1-6 */\n    background: linear-gradient(to right, #0084ff, #b6d5fd); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n    text-align: center;\n    position: fixed;\n    z-index: 999;\n    width:100%;\n}\n\n.nav-toggle {\n    display: none;\n}\n\n.nav-toggle-label {\n    color: white;\n    position: absolute;\n    top: 0;\n    left: 0;\n    margin-left: 1rem;\n    display: flex;\n    align-items: center;\n    height: 100%;\n}\n\nnav {\n    position: absolute;\n    text-align: left;\n    top: 100%;\n    left: 0;\n    background-color: white;\n    width: 100%;\n    transform: scale(1,0);\n    transform-origin: top;\n    transition: transform 0.4s ease-in-out;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n    border-bottom: 1px rgb(165, 163, 163) solid;\n}\n\nnav ul {\n    list-style: none;\n}\n\nnav li {\n    display: flex;\n    flex-direction: column;\n    margin-left: 1rem;\n}\n\nnav a {\n    color: rgb(0, 0, 0);\n    text-decoration: none;\n    font-size: 1rem;\n    text-transform: uppercase;\n    opacity: 0;\n    transition: opacity 0.15s ease-in-out;\n    position: relative;\n    height: 36px;\n    width: 36px;\n}\n\n.nav-toggle:checked ~ nav {\n    transform: scale(1,1);\n}\n\n.nav-toggle:checked ~ nav a {\n    opacity: 1;\n    transition: opacity 0.25s ease-in-out 0.25s;\n}\n\n/* content */\n\n.project-container {\n    display: flex;\n    outline: red 1px solid;\n    width: 100%;\n    padding: 5rem 3rem;\n    align-items: center;\n    flex-direction: column;\n}\n\n.project-header {\n    display: flex;\n    outline: red 1px dotted;\n    width: 100%;\n    margin-bottom: 1rem;\n}\n\n.todo-list-item {\n    border-bottom: rgb(240, 237, 237) 1px solid;\n    padding: 1rem;\n    display: flex;\n    gap: 1rem;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.todo-list {\n    list-style: none;\n    width: 100%;\n}\n\n.todo-title {\n    font-weight: 400;\n    font-size: 1rem;\n    color: black;\n    overflow-wrap: break-word;\n    word-break: break-word;\n}\n\n.todo-text {\n    font-size: 0.85rem;\n    font-weight: 300;\n    color: rgb(48, 47, 47);\n    line-height: 1.4;\n    word-spacing: 1px;\n    overflow-wrap: break-word;\n    word-break: break-word;\n    \n}\n\n.todo-text-container {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n   \n}\n\n.todo-button {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    border: rgb(105, 104, 104) 1px solid;\n    background-color: white;\n    font-size: 0.5rem; \n}\n\n.todo-button:hover {\n    background-color: rgb(197, 194, 194);\n    transition: background-color 0.3s ease-in-out;\n}\n\n@media screen and (min-width: 900px) {\n    .nav-toggle-label {\n        display:none;\n    }\n\n    header {\n        display: grid;\n        grid-template-columns: 1fr auto minmax(600px, 2fr) 1fr;\n    }\n\n    .logo {\n        grid-column: 2 / 3;\n    }\n\n    nav {\n        all: unset;\n        grid-column: 3 / 4;\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n    }\n\n    nav ul {\n        display: flex;\n        gap: 0.5rem;\n    }\n\n    nav a {\n        opacity: 1;\n    }\n\n    nav li {\n        margin: 0;\n        padding: 0;\n    }\n\n    .tooltip {\n        all: unset;\n        position: absolute;\n        top: 45px;\n        left: 0;\n        background-color: whitesmoke;\n        padding: 0.5rem;\n        border-radius: 3px;\n        font-size: 0.8rem;\n        white-space: nowrap;\n        color: rgb(71, 71, 71);\n        text-transform: none;\n        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n        opacity: 0;\n        cursor: default;\n    }\n\n    .container {\n        display: flex;\n        width: 100%;\n        padding-top: 6rem;\n        padding-bottom: 5rem;\n        align-items: center;\n        flex-direction: column;\n    }\n\n    \n    .project-header {\n        max-width: 800px;\n    }\n\n    .todo-list-item {\n        width: 800px;\n    }\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;600&display=swap');\n\n:root {\n    --blue: rgb(66, 174, 247);\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n    font-size: 16px;\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 300;\n}\n\n.nav-symbol {\n    height: 36px;\n    width: 36px;\n    border-radius: 3px;\n    padding: 6px;\n}\n\n.nav-symbol:hover {\n    background-color: rgba(0, 0, 0, 0.11);\n}\n\n.nav-symbol:hover ~ .tooltip {\n    opacity: 1;\n    transition: opacity 0s 0.2s;\n}\n\n.tooltip {\n    position: absolute;\n    top: 2px;\n    left: 35px;\n    opacity: 0;\n    padding: 0.5rem;\n    font-size: 0.9rem;\n    white-space: nowrap;\n    color: rgb(71, 71, 71);\n    text-transform: none;\n    cursor: default;\n}\n\n/* navbar */\n\n.logo {\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 600;\n    letter-spacing: -2px;\n    color: rgb(255, 255, 255);\n    font-size: 2.2rem;\n    cursor: pointer;\n    white-space: nowrap;\n}\n\nheader {\n    background: #797bf3;  /* fallback for old browsers */\n    background: -webkit-linear-gradient(to right, #d6e8fac2, #4294ff81);  /* Chrome 10-25, Safari 5.1-6 */\n    background: linear-gradient(to right, #0084ff, #b6d5fd); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n    text-align: center;\n    position: fixed;\n    z-index: 999;\n    width:100%;\n}\n\n.nav-toggle {\n    display: none;\n}\n\n.nav-toggle-label {\n    color: white;\n    position: absolute;\n    top: 0;\n    left: 0;\n    margin-left: 1rem;\n    display: flex;\n    align-items: center;\n    height: 100%;\n}\n\nnav {\n    position: absolute;\n    text-align: left;\n    top: 100%;\n    left: 0;\n    background-color: white;\n    width: 100%;\n    transform: scale(1,0);\n    transform-origin: top;\n    transition: transform 0.4s ease-in-out;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n    border-bottom: 1px rgb(165, 163, 163) solid;\n}\n\nnav ul {\n    list-style: none;\n}\n\nnav li {\n    display: flex;\n    flex-direction: column;\n    margin-left: 1rem;\n}\n\nnav a {\n    color: rgb(0, 0, 0);\n    text-decoration: none;\n    font-size: 1rem;\n    text-transform: uppercase;\n    opacity: 0;\n    transition: opacity 0.15s ease-in-out;\n    position: relative;\n    height: 36px;\n    width: 36px;\n}\n\n.nav-toggle:checked ~ nav {\n    transform: scale(1,1);\n}\n\n.nav-toggle:checked ~ nav a {\n    opacity: 1;\n    transition: opacity 0.25s ease-in-out 0.25s;\n}\n\n/* content */\n\n.project-container {\n    display: flex;\n    outline: red 1px solid;\n    width: 100%;\n    padding: 5rem 3rem;\n    align-items: center;\n    flex-direction: column;\n}\n\n.project-header {\n    display: flex;\n    outline: red 1px dotted;\n    width: 100%;\n    margin-bottom: 1rem;\n}\n\n.todo-list-item {\n    border-bottom: rgb(240, 237, 237) 1px solid;\n    padding: 1rem;\n    display: flex;\n    gap: 1rem;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.todo-list {\n    list-style: none;\n    width: 100%;\n}\n\n.todo-title {\n    font-weight: 400;\n    font-size: 1rem;\n    color: black;\n    overflow-wrap: break-word;\n    word-break: break-word;\n}\n\n.todo-text {\n    font-size: 0.85rem;\n    font-weight: 300;\n    color: rgb(48, 47, 47);\n    line-height: 1.4;\n    word-spacing: 1px;\n    overflow-wrap: break-word;\n    word-break: break-word;\n    \n}\n\n.todo-text-container {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n   \n}\n\n.todo-button {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    border: rgb(105, 104, 104) 1px solid;\n    background-color: white;\n    font-size: 0.5rem; \n}\n\n.todo-button:hover {\n    background-color: rgb(197, 194, 194);\n    transition: background-color 0.3s ease-in-out;\n}\n\n@media screen and (min-width: 900px) {\n    .nav-toggle-label {\n        display:none;\n    }\n\n    header {\n        display: grid;\n        grid-template-columns: 1fr auto minmax(600px, 2fr) 1fr;\n    }\n\n    .logo {\n        grid-column: 2 / 3;\n    }\n\n    nav {\n        all: unset;\n        grid-column: 3 / 4;\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n    }\n\n    nav ul {\n        display: flex;\n        gap: 0.5rem;\n    }\n\n    nav a {\n        opacity: 1;\n    }\n\n    nav li {\n        margin: 0;\n        padding: 0;\n    }\n\n    .tooltip {\n        all: unset;\n        position: absolute;\n        top: 45px;\n        left: 0;\n        background-color: whitesmoke;\n        padding: 0.5rem;\n        border-radius: 3px;\n        font-size: 0.8rem;\n        white-space: nowrap;\n        color: rgb(71, 71, 71);\n        text-transform: none;\n        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n        opacity: 0;\n        cursor: default;\n    }\n\n    .container {\n        display: flex;\n        width: 100%;\n        padding-top: 6rem;\n        padding-bottom: 5rem;\n        align-items: center;\n        flex-direction: column;\n    }\n\n    \n    .project-header {\n        max-width: 800px;\n    }\n\n    .todo-list-item {\n        width: 800px;\n    }\n}\n\n"],sourceRoot:""}]);const a=i},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var p=0;p<n.length;p++){var l=[].concat(n[p]);o&&i[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(i).concat([A]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var A={},i=[],a=0;a<n.length;a++){var s=n[a],p=o.base?s[0]+o.base:s[0],l=A[p]||0,d="".concat(p," ").concat(l);A[p]=l+1;var c=e(d),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==c)t[c].references++,t[c].updater(f);else{var g=r(f,o);o.byIndex=a,t.splice(a,0,{identifier:d,updater:g,references:1})}i.push(d)}return i}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var A=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=e(A[i]);t[a].references--}for(var s=o(n,r),p=0;p<A.length;p++){var l=e(A[p]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}A=s}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var A=e.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},763:(n,t,e)=>{n.exports=e.p+"fd284173cff1832f48f6.png"},679:(n,t,e)=>{n.exports=e.p+"86c5403f6b6913c565cd.png"},508:(n,t,e)=>{n.exports=e.p+"7650f5b34bf2723f4dd0.png"},494:(n,t,e)=>{n.exports=e.p+"831b8df792914a7f6120.png"}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var A=t[o]={id:o,exports:{}};return n[o](A,A.exports,e),A.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var o=t.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),(()=>{var n=e(379),t=e.n(n),o=e(795),r=e.n(o),A=e(569),i=e.n(A),a=e(565),s=e.n(a),p=e(216),l=e.n(p),d=e(589),c=e.n(d),f=e(426),g={};g.styleTagTransform=c(),g.setAttributes=s(),g.insert=i().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=l(),t()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;const C=(n,t)=>{let e=new Image;return e.src=n,e.classList.add(t),e},u=n=>{const t=document.createElement(n.type);if(t.textContent=n.text,"object"==typeof n.css)for(let e=0;e<n.css.length;e++)t.classList.add(n.css[e]);if("object"==typeof n.attr)for(const[e,o]of Object.entries(n.attr))t.setAttribute(e,o);return t};var B=e(679),m=e(494),b=e(763),I=e(508);const h=(n,t,e,o)=>{let r={title:n,description:t,dueDate:e,priority:o};return Object.assign({},(n=>({setTitle:t=>n.title=t,setDescription:t=>n.description=t,setDueDate:t=>n.dueDate=t,getTitle:()=>n.title,getDescription:()=>n.description,getDueDate:()=>n.dueDate}))(r))};!function(){let n=u({type:"header"}),t=u({type:"nav"}),e=u({type:"div",css:["logo"],text:"Nicco"}),o=u({type:"input",attr:{type:"checkbox",id:"nav-toggle"},css:["nav-toggle"]}),r=u({type:"label",attr:{for:"nav-toggle"},css:["nav-toggle-label"]}),A=u({type:"ul"}),i=u({type:"li"}),a=u({type:"li"}),s=u({type:"li"}),p=u({type:"a",attr:{href:"#"}}),l=u({type:"a",attr:{href:"#"}}),d=u({type:"a",attr:{href:"#"}}),c=C(B,"nav-symbol"),f=C(m,"nav-symbol"),g=C(b,"nav-symbol"),h=C(I,"nav-symbol"),y=u({type:"div",css:["tooltip"],text:"Home"}),x=u({type:"div",css:["tooltip"],text:"Create To Do"}),v=u({type:"div",css:["tooltip"],text:"View To Do"});document.body.append(n),n.append(e,o,r,t),r.append(f),t.append(A),A.append(i,a,s),i.append(p),a.append(l),s.append(d),p.append(c,y),l.append(g,x),d.append(h,v)}(),function(n,t){let e=u({type:"div",css:["project-container"]}),o=u({type:"h1",text:"project"}),r=u({type:"div",css:["project-header"]}),A=u({type:"ul",css:["todo-list"]}),i=u({type:"li",css:["todo-list-item"]}),a=u({type:"button",css:["todo-button"],text:"✔️"}),s=u({type:"p",css:["todo-title"],text:"Finish the webpage."}),p=u({type:"p",css:["todo-text"],text:"I must finish this webpage, I have alot of stuff to do..."}),l=u({type:"div",css:["todo-text-container"]});document.body.append(e),e.append(r,A),A.append(i),r.append(o),i.append(a,l),l.append(s,p)}();let y=h("Finish Website","Finish this to do list website","no due date",1),x=h("Finish the logic for dom","This is a good challenge","2 days",2),v=(n=>{let t={title:"Inbox",todo:[]};return Object.assign({},(n=>({setTitle:t=>n.title=t,addTodo:t=>n.todo.push(t),getTitle:()=>n.title,getTodo:()=>n.todo}))(t))})();v.addTodo(y),v.addTodo(x),function(n){let t=n.getTodo(),e=u({type:"div",css:["project-container"]}),o=u({type:"div",css:["project-header"]}),r=u({type:"h1",text:n.getTitle()}),A=u({type:"ul",css:["todo-list"]});document.body.append(e),e.append(o,A),o.append(r),t.forEach((n=>{let t=u({type:"li",css:["todo-list-item"]}),e=u({type:"button",css:["todo-button"],text:"✔️"}),o=u({type:"div",css:["todo-text-container"]}),r=u({type:"p",css:["todo-title"],text:n.getTitle()}),i=u({type:"p",css:["todo-text"],text:n.getDescription()});A.append(t),t.append(e,o),o.append(r,i)}))}([v][0])})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,